{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  var resolvedValue;\n  var string = '';\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar CLASS_PART_SEPARATOR = '-';\nfunction createClassUtils(config) {\n  var classMap = createClassMap(config);\n  function getClassGroupId(className) {\n    var classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n  function getConflictingClassGroupIds(classGroupId) {\n    return config.conflictingClassGroups[classGroupId] || [];\n  }\n  return {\n    getClassGroupId: getClassGroupId,\n    getConflictingClassGroupIds: getConflictingClassGroupIds\n  };\n}\nfunction getGroupRecursive(classParts, classPartObject) {\n  var _classPartObject$vali;\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  var currentClassPart = classParts[0];\n  var nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  var classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return (_classPartObject$vali = classPartObject.validators.find(function (_ref) {\n    var validator = _ref.validator;\n    return validator(classRest);\n  })) == null ? void 0 : _classPartObject$vali.classGroupId;\n}\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\r\n * Exported for testing only\r\n */\nfunction createClassMap(config) {\n  var theme = config.theme,\n    prefix = config.prefix;\n  var classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(function (_ref2) {\n    var classGroupId = _ref2[0],\n      classGroup = _ref2[1];\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(function (classDefinition) {\n    if (typeof classDefinition === 'string') {\n      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId: classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(function (_ref3) {\n      var key = _ref3[0],\n        classGroup = _ref3[1];\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\nfunction getPart(classPartObject, path) {\n  var currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(function (_ref4) {\n    var classGroupId = _ref4[0],\n      classGroup = _ref4[1];\n    var prefixedClassGroup = classGroup.map(function (classDefinition) {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {\n          var key = _ref5[0],\n            value = _ref5[1];\n          return [prefix + key, value];\n        }));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: function get() {\n        return undefined;\n      },\n      set: function set() {}\n    };\n  }\n  var cacheSize = 0;\n  var cache = new Map();\n  var previousCache = new Map();\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n  return {\n    get: function get(key) {\n      var value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set: function set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\nvar IMPORTANT_MODIFIER = '!';\nfunction createSplitModifiers(config) {\n  var separator = config.separator || ':';\n  // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  return function splitModifiers(className) {\n    var bracketDepth = 0;\n    var modifiers = [];\n    var modifierStart = 0;\n    for (var index = 0; index < className.length; index++) {\n      var _char = className[index];\n      if (bracketDepth === 0 && _char === separator[0]) {\n        if (separator.length === 1 || className.slice(index, index + separator.length) === separator) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separator.length;\n        }\n      }\n      if (_char === '[') {\n        bracketDepth++;\n      } else if (_char === ']') {\n        bracketDepth--;\n      }\n    }\n    var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    return {\n      modifiers: modifiers,\n      hasImportantModifier: hasImportantModifier,\n      baseClassName: baseClassName\n    };\n  };\n}\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  var sortedModifiers = [];\n  var unsortedModifiers = [];\n  modifiers.forEach(function (modifier) {\n    var isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier]));\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());\n  return sortedModifiers;\n}\nfunction createConfigUtils(config) {\n  return _extends({\n    cache: createLruCache(config.cacheSize),\n    splitModifiers: createSplitModifiers(config)\n  }, createClassUtils(config));\n}\nvar SPLIT_CLASSES_REGEX = /\\s+/;\nfunction mergeClassList(classList, configUtils) {\n  var splitModifiers = configUtils.splitModifiers,\n    getClassGroupId = configUtils.getClassGroupId,\n    getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */\n  var classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {\n    var _splitModifiers = splitModifiers(originalClassName),\n      modifiers = _splitModifiers.modifiers,\n      hasImportantModifier = _splitModifiers.hasImportantModifier,\n      baseClassName = _splitModifiers.baseClassName;\n    var classGroupId = getClassGroupId(baseClassName);\n    if (!classGroupId) {\n      return {\n        isTailwindClass: false,\n        originalClassName: originalClassName\n      };\n    }\n    var variantModifier = sortModifiers(modifiers).join(':');\n    var modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId: modifierId,\n      classGroupId: classGroupId,\n      originalClassName: originalClassName\n    };\n  }).reverse()\n  // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(function (parsed) {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n    var modifierId = parsed.modifierId,\n      classGroupId = parsed.classGroupId;\n    var classId = modifierId + classGroupId;\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId).forEach(function (group) {\n      return classGroupsInConflict.add(modifierId + group);\n    });\n    return true;\n  }).reverse().map(function (parsed) {\n    return parsed.originalClassName;\n  }).join(' ');\n}\nfunction createTailwindMerge() {\n  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {\n    createConfig[_key] = arguments[_key];\n  }\n  var configUtils;\n  var cacheGet;\n  var cacheSet;\n  var functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    var firstCreateConfig = createConfig[0],\n      restCreateConfig = createConfig.slice(1);\n    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {\n      return createConfigCurrent(previousConfig);\n    }, firstCreateConfig());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    var cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    var result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nfunction fromTheme(key) {\n  var themeGetter = function themeGetter(theme) {\n    return theme[key] || [];\n  };\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\nvar arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))/;\n// Shadow always begins with x and y offset separated by underscore\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value) || isArbitraryLength(value);\n}\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, 'size', isNever);\n}\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\nfunction isArbitraryUrl(value) {\n  return getIsArbitraryValue(value, 'url', isUrl);\n}\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\n/**\r\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\r\n */\nvar isArbitraryWeight = isArbitraryNumber;\nfunction isNumber(value) {\n  return !Number.isNaN(Number(value));\n}\nfunction isInteger(value) {\n  return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly);\n}\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\nfunction isAny() {\n  return true;\n}\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\nfunction getIsArbitraryValue(value, label, testValue) {\n  var result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return result[1] === label;\n    }\n    return testValue(result[2]);\n  }\n  return false;\n}\nfunction isLengthOnly(value) {\n  return lengthUnitRegex.test(value);\n}\nfunction isNever() {\n  return false;\n}\nfunction isUrl(value) {\n  return value.startsWith('url(');\n}\nfunction isIntegerOnly(value) {\n  return Number.isInteger(Number(value));\n}\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\nvar validators = {\n  __proto__: null,\n  isLength: isLength,\n  isArbitraryLength: isArbitraryLength,\n  isArbitrarySize: isArbitrarySize,\n  isArbitraryPosition: isArbitraryPosition,\n  isArbitraryUrl: isArbitraryUrl,\n  isArbitraryNumber: isArbitraryNumber,\n  isArbitraryWeight: isArbitraryWeight,\n  isNumber: isNumber,\n  isInteger: isInteger,\n  isArbitraryValue: isArbitraryValue,\n  isAny: isAny,\n  isTshirtSize: isTshirtSize,\n  isArbitraryShadow: isArbitraryShadow\n};\nfunction getDefaultConfig() {\n  var colors = fromTheme('colors');\n  var spacing = fromTheme('spacing');\n  var blur = fromTheme('blur');\n  var brightness = fromTheme('brightness');\n  var borderColor = fromTheme('borderColor');\n  var borderRadius = fromTheme('borderRadius');\n  var borderSpacing = fromTheme('borderSpacing');\n  var borderWidth = fromTheme('borderWidth');\n  var contrast = fromTheme('contrast');\n  var grayscale = fromTheme('grayscale');\n  var hueRotate = fromTheme('hueRotate');\n  var invert = fromTheme('invert');\n  var gap = fromTheme('gap');\n  var gradientColorStops = fromTheme('gradientColorStops');\n  var inset = fromTheme('inset');\n  var margin = fromTheme('margin');\n  var opacity = fromTheme('opacity');\n  var padding = fromTheme('padding');\n  var saturate = fromTheme('saturate');\n  var scale = fromTheme('scale');\n  var sepia = fromTheme('sepia');\n  var skew = fromTheme('skew');\n  var space = fromTheme('space');\n  var translate = fromTheme('translate');\n  var getOverscroll = function getOverscroll() {\n    return ['auto', 'contain', 'none'];\n  };\n  var getOverflow = function getOverflow() {\n    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  };\n  var getSpacingWithAuto = function getSpacingWithAuto() {\n    return ['auto', spacing];\n  };\n  var getLengthWithEmpty = function getLengthWithEmpty() {\n    return ['', isLength];\n  };\n  var getNumberWithAutoAndArbitrary = function getNumberWithAutoAndArbitrary() {\n    return ['auto', isNumber, isArbitraryValue];\n  };\n  var getPositions = function getPositions() {\n    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  };\n  var getLineStyles = function getLineStyles() {\n    return ['solid', 'dashed', 'dotted', 'double', 'none'];\n  };\n  var getBlendModes = function getBlendModes() {\n    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];\n  };\n  var getAlign = function getAlign() {\n    return ['start', 'end', 'center', 'between', 'around', 'evenly'];\n  };\n  var getZeroAndEmpty = function getZeroAndEmpty() {\n    return ['', '0', isArbitraryValue];\n  };\n  var getBreaks = function getBreaks() {\n    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  };\n  var getNumber = function getNumber() {\n    return [isNumber, isArbitraryNumber];\n  };\n  var getNumberAndArbitrary = function getNumberAndArbitrary() {\n    return [isNumber, isArbitraryValue];\n  };\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [isAny],\n      spacing: [isLength],\n      blur: ['none', '', isTshirtSize, isArbitraryLength],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n      borderSpacing: [spacing],\n      borderWidth: getLengthWithEmpty(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: [spacing],\n      gradientColorStops: [colors],\n      inset: getSpacingWithAuto(),\n      margin: getSpacingWithAuto(),\n      opacity: getNumber(),\n      padding: [spacing],\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: [spacing],\n      translate: [spacing]\n    },\n    classGroups: {\n      // Layout\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\n      container: ['container'],\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      \"float\": [{\n        \"float\": ['right', 'left', 'none']\n      }],\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none']\n      }],\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [].concat(getPositions(), [isArbitraryValue])\n      }],\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: ['auto', isInteger]\n      }],\n      // Flexbox and Grid\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: [spacing]\n      }],\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger]\n      }],\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: [isInteger]\n        }, isArbitraryValue]\n      }],\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger]\n        }, isArbitraryValue]\n      }],\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: getAlign()\n      }],\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: [].concat(getAlign(), ['baseline'])\n      }],\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': [].concat(getAlign(), ['baseline', 'stretch'])\n      }],\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', spacing]\n      }],\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': ['min', 'max', 'fit', isLength]\n      }],\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize, isArbitraryLength]\n      }],\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: [spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': ['min', 'max', 'fit', isLength]\n      }],\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': [spacing, 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryLength]\n      }],\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength]\n      }],\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [].concat(getLineStyles(), ['wavy'])\n      }],\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength]\n      }],\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength]\n      }],\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: [spacing]\n      }],\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryLength]\n      }],\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap']\n      }],\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      \"break\": [{\n        \"break\": ['normal', 'words', 'all', 'keep']\n      }],\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [].concat(getPositions(), [isArbitraryPosition])\n      }],\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryUrl]\n      }],\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [].concat(getLineStyles(), ['hidden'])\n      }],\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: [''].concat(getLineStyles())\n      }],\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength]\n      }],\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: [isLength]\n      }],\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w': [{\n        ring: getLengthWithEmpty()\n      }],\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength]\n      }],\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\r\n       * Mix Beldn Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      // Transitions and Animation\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: ['appearance-none'],\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': [spacing]\n      }],\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': [spacing]\n      }],\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': [spacing]\n      }],\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': [spacing]\n      }],\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': [spacing]\n      }],\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': [spacing]\n      }],\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': [spacing]\n      }],\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': [spacing]\n      }],\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': [spacing]\n      }],\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': [spacing]\n      }],\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': [spacing]\n      }],\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': [spacing]\n      }],\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': [spacing]\n      }],\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': [spacing]\n      }],\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {\n          pan: ['x', 'left', 'right', 'y', 'up', 'down']\n        }]\n      }],\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryNumber]\n      }],\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\n      sr: ['sr-only', 'not-sr-only']\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      rounded: ['rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb']\n    }\n  };\n}\nvar twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\nfunction mergeConfigs(baseConfig, configExtension) {\n  for (var key in configExtension) {\n    mergePropertyRecursively(baseConfig, key, configExtension[key]);\n  }\n  return baseConfig;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar overrideTypes = /*#__PURE__*/new Set(['string', 'number', 'boolean']);\nfunction mergePropertyRecursively(baseObject, mergeKey, mergeValue) {\n  if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {\n    baseObject[mergeKey] = mergeValue;\n    return;\n  }\n  if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n    baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);\n    return;\n  }\n  if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n    if (baseObject[mergeKey] === null) {\n      baseObject[mergeKey] = mergeValue;\n      return;\n    }\n    for (var nextKey in mergeValue) {\n      mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);\n    }\n  }\n}\nfunction extendTailwindMerge(configExtension) {\n  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    createConfig[_key - 1] = arguments[_key];\n  }\n  return typeof configExtension === 'function' ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function () {\n    return mergeConfigs(getDefaultConfig(), configExtension);\n  }].concat(createConfig));\n}\n\n/**\r\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\r\n */\nvar join = twJoin;\nexports.createTailwindMerge = createTailwindMerge;\nexports.extendTailwindMerge = extendTailwindMerge;\nexports.fromTheme = fromTheme;\nexports.getDefaultConfig = getDefaultConfig;\nexports.join = join;\nexports.mergeConfigs = mergeConfigs;\nexports.twJoin = twJoin;\nexports.twMerge = twMerge;\nexports.validators = validators;","map":{"version":3,"mappings":"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","names":["twJoin","index","argument","resolvedValue","string","arguments","length","toValue","mix","k","CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","getClassGroupId","className","classParts","split","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","conflictingClassGroups","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","_classPartObject$vali","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","_ref2","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","_ref3","key","path","currentClassPartObject","pathPart","has","set","func","classGroupEntries","map","_ref4","prefixedClassGroup","fromEntries","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","splitModifiers","bracketDepth","modifiers","modifierStart","char","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","sort","createConfigUtils","SPLIT_CLASSES_REGEX","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","isTailwindClass","variantModifier","modifierId","reverse","filter","parsed","classId","add","group","createConfig","cacheGet","cacheSet","functionToCall","initTailwindMerge","firstCreateConfig","restCreateConfig","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","mergeClassList","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitrarySize","isNever","isArbitraryPosition","isArbitraryUrl","isUrl","isArbitraryNumber","isArbitraryWeight","Number","isNaN","isInteger","isIntegerOnly","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow","isShadow","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAuto","getLengthWithEmpty","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","aspect","container","columns","box","display","clear","isolation","object","overflow","overscroll","position","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","pt","pr","pb","pl","m","mx","my","mt","mr","mb","ml","w","screen","h","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","pan","select","fill","stroke","sr","twMerge","createTailwindMerge","baseConfig","configExtension","mergePropertyRecursively","hasOwnProperty","prototype","overrideTypes","baseObject","mergeKey","mergeValue","call","Array","isArray","concat","nextKey","extendTailwindMerge","mergeConfigs"],"sources":["C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\tw-join.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\class-utils.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\lru-cache.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\modifier-utils.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\config-utils.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\merge-classlist.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\create-tailwind-merge.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\from-theme.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\validators.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\default-config.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\tw-merge.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\merge-configs.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\lib\\extend-tailwind-merge.ts","C:\\Users\\BrianSiu\\Documents\\ET\\employee-system\\node_modules\\tailwind-merge\\src\\index.ts"],"sourcesContent":["/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { ClassGroup, ClassGroupId, ClassValidator, Config, ThemeGetter, ThemeObject } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId) {\n        return config.conflictingClassGroups[classGroupId] || []\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { Config } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: Config) {\n    const separator = config.separator || ':'\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        let bracketDepth = 0\n        let modifiers = []\n        let modifierStart = 0\n\n        for (let index = 0; index < className.length; index++) {\n            let char = className[index]\n\n            if (bracketDepth === 0 && char === separator[0]) {\n                if (\n                    separator.length === 1 ||\n                    className.slice(index, index + separator.length) === separator\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separator.length\n                }\n            }\n\n            if (char === '[') {\n                bracketDepth++\n            } else if (char === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n","import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { Config } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const { modifiers, hasImportantModifier, baseClassName } =\n                    splitModifiers(originalClassName)\n\n                const classGroupId = getClassGroupId(baseClassName)\n\n                if (!classGroupId) {\n                    return {\n                        isTailwindClass: false as const,\n                        originalClassName,\n                    }\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { Config } from './types'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig(),\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(value: string) {\n    return (\n        isNumber(value) ||\n        stringLengths.has(value) ||\n        fractionRegex.test(value) ||\n        isArbitraryLength(value)\n    )\n}\n\nexport function isArbitraryLength(value: string) {\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\n}\n\nexport function isArbitrarySize(value: string) {\n    return getIsArbitraryValue(value, 'size', isNever)\n}\n\nexport function isArbitraryPosition(value: string) {\n    return getIsArbitraryValue(value, 'position', isNever)\n}\n\nexport function isArbitraryUrl(value: string) {\n    return getIsArbitraryValue(value, 'url', isUrl)\n}\n\nexport function isArbitraryNumber(value: string) {\n    return getIsArbitraryValue(value, 'number', isNumber)\n}\n\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nexport const isArbitraryWeight = isArbitraryNumber\n\nexport function isNumber(value: string) {\n    return !Number.isNaN(Number(value))\n}\n\nexport function isInteger(value: string) {\n    return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly)\n}\n\nexport function isArbitraryValue(value: string) {\n    return arbitraryValueRegex.test(value)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(value: string) {\n    return tshirtUnitRegex.test(value)\n}\n\nexport function isArbitraryShadow(value: string) {\n    return getIsArbitraryValue(value, '', isShadow)\n}\n\nfunction getIsArbitraryValue(value: string, label: string, testValue: (value: string) => boolean) {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return result[1] === label\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nfunction isLengthOnly(value: string) {\n    return lengthUnitRegex.test(value)\n}\n\nfunction isNever() {\n    return false\n}\n\nfunction isUrl(value: string) {\n    return value.startsWith('url(')\n}\n\nfunction isIntegerOnly(value: string) {\n    return Number.isInteger(Number(value))\n}\n\nfunction isShadow(value: string) {\n    return shadowRegex.test(value)\n}\n","import { fromTheme } from './from-theme'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAuto = () => ['auto', spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumber = () => [isNumber, isArbitraryNumber]\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryLength],\n            brightness: getNumber(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n            borderSpacing: [spacing],\n            borderWidth: getLengthWithEmpty(),\n            contrast: getNumber(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: [spacing],\n            gradientColorStops: [colors],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: getNumber(),\n            padding: [spacing],\n            saturate: getNumber(),\n            scale: getNumber(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: [spacing],\n            translate: [spacing],\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: [spacing] }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: getAlign() }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: [...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline', 'stretch'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', 'fit', spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: [spacing, 'auto', 'min', 'max', 'fit'] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                { leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength] },\n            ],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: [spacing] }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [{ whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap'] }],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Beldn Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': [spacing] }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': [spacing] }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': [spacing] }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': [spacing] }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': [spacing] }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': [spacing] }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': [spacing] }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': [spacing] }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': [spacing] }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': [spacing] }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': [spacing] }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': [spacing] }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': [spacing] }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': [spacing] }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n    } as const\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n","import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown,\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object],\n            )\n        }\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n","import { twJoin } from './lib/tw-join'\n\nexport { twMerge } from './lib/tw-merge'\nexport { twJoin } from './lib/tw-join'\nexport { getDefaultConfig } from './lib/default-config'\nexport { extendTailwindMerge } from './lib/extend-tailwind-merge'\nexport { createTailwindMerge } from './lib/create-tailwind-merge'\nexport type { Config } from './lib/types'\nexport * as validators from './lib/validators'\nexport { mergeConfigs } from './lib/merge-configs'\nexport { fromTheme } from './lib/from-theme'\n\n/**\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\n */\nexport const join = twJoin\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}